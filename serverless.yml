service: test
frameworkVersion: "3"
useDotenv: true
variablesResolutionMode: 20210326
disabledDeprecations:
  - CLI_OPTIONS_SCHEMA

provider:
  name: aws
  stackName: test-${opt:stage, 'prod'}
  architecture: arm64
  runtime: nodejs18.x
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, 'prod'}
  logRetentionInDays: 7
  lambdaHashingVersion: 20201221
  versionFunctions: false
  apiGateway:
      binaryMediaTypes:
        - '*/*'
        
  environment:
    NODE_ENV: 'development'
    NODE_TLS_REJECT_UNAUTHORIZED: '0'
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_REGION: ${self:provider.region}
    SERVERLESS_STAGE: ${self:provider.stage}

package:
  individually: true

plugins:
  - serverless-plugin-scripts
  - serverless-offline
  - serverless-domain-manager
  - serverless-certificate-creator
  - serverless-esbuild

functions:
  test:
    memorySize: 512
    provisionedConcurrency: 0
    timeout: 6
    handler: server/index.handler
    name: test-${self:provider.stage}
    events:
      - http:
          path: /
          method: any
          cors: true
      - http:
          path: /{any+}
          method: any
          cors: true
          
custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    sourcesContent: false
    target: 'node18'
    platform: 'node'
    exclude: ['@aws-sdk/client-apigatewaymanagementapi', 
    '@aws-sdk/client-dynamodb', '@aws-sdk/client-sns', '@aws-sdk/client-sqs',
    '@aws-sdk/client-ssm', '@aws-sdk/lib-dynamodb']

    
  serverless-offline:
    useChildProcesses: false
    noPrependStageInUrl: true
    httpPort: 3000
    lambdaPort: 3002

resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: test-${self:provider.stage}
